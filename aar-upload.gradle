publishing {
    publications {
        release(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom {
                // 库信息
                name = 'fraudmetrix'// 替换成自己的
                description = 'A tool about android Key-Value'// 替换成自己的
                url = 'https://github.com/lurenman/MavenCentralAar'// 替换成自己的
                // 开放许可证书，可以自己换其他的
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                // 开发者信息
                developers {
                    developer {
                        id = 'lurenman'// 替换成自己的
                        name = 'lurenman'// 替换成自己的
                        email = '1464013886@qq.com'// 替换成自己的
                    }
                }
                // scm
                scm {
                    connection = 'https://github.com/lurenman/MavenCentralAar.git'
                    developerConnection = 'https://github.com/lurenman/MavenCentralAargit'
                    url = 'https://github.com/lurenman/MavenCentralAar'// 替换成自己的
                }
                withXml {
                    //asNode().appendNode('测试').appendNode('自定义key', '自定义value')
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.implementation.allDependencies.each {
                        if (it.version != "unspecified") { // 过滤项目内library引用
                            println "=====>" + it.properties
                            println "=====>" + it.group + "  " + it.name + it.version
                            if (it.group == null || it.name == null || it.version == null) return
                            if (it.group == group) return
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)

                            if (it.excludeRules.size() > 0) {
                                def exclusionsNode = dependencyNode.appendNode('exclusions')
                                it.excludeRules.each { rule ->
                                    def exclusionNode = exclusionsNode.appendNode('exclusion')
                                    exclusionNode.appendNode('groupId', rule.group)
                                    exclusionNode.appendNode('artifactId', rule.module)
                                }
                            }
                        }
                    }
                }
            }

            // aar包依赖信息
            groupId "io.github.lurenman"// 替换成自己的
            artifactId "fraudmetrix"// 替换成自己的
            version "1.0"// 替换成自己的

//                afterEvaluate {
//                    from components.release
//                }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = "${sonatypeUsername}"
                password = "${sonatypePassword}"
            }
        }
    }
}

signing {
    sign publishing.publications.release
}